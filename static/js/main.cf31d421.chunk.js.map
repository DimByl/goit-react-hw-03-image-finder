{"version":3,"sources":["components/ImageGallery/ImageGalleryItem.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Button/Button.module.scss","components/Notice/Notice.module.scss","components/ErrorNotice/ErrorNotice.module.scss","components/Searchbar/Searchbar.module.scss","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Notice/Notice.jsx","components/ErrorNotice/ErrorNotice.jsx","components/Modal/Modal.jsx","services/imagesApi.js","App.js","index.js","components/Modal/Modal.module.scss"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","event","preventDefault","type","SearchForm__button","SearchForm__button__label","SearchForm__input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","url","tags","largeImageURL","src","alt","ImageGalleryItem__image","ImageGallery","images","onClick","map","id","webformatURL","Button","shouldRenderBtn","onButtonClick","Loader","color","height","width","timeout","Notice","notice","ErrorNotice","error","message","modalRoot","document","querySelector","Modal","largeImageUrl","largeImageAlt","onClose","useEffect","onEscHandler","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","ModalImg","axios","defaults","baseURL","fetchGetImages","searchQuery","currentPage","pageSize","get","then","responce","data","App","setImages","setCurrentPage","setSearchQuery","loading","setLoading","setNotice","renderBtn","setRenderBtn","setError","showModal","setShowModal","setLargeImageUrl","setLargeImageAlt","options","imagesApi","hits","totalHits","length","prev","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","fetchImages","nodeName","dataset","largeImage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf31d421.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2QOkj\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__HwI3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__20ymh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3dM9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notice\":\"Notice_Notice__2sici\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorNotice\":\"ErrorNotice_ErrorNotice__3ngjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__1A69o\",\"SearchForm-button\":\"Searchbar_SearchForm-button__hITj0\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__LRSZ5\",\"SearchForm-input\":\"Searchbar_SearchForm-input__25FeT\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.scss';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { value } = event.currentTarget;\r\n\r\n    setQuery(value);\r\n  };\r\n\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit(query);\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form className={styles.SearchForm} onSubmit={handleFormSubmit}>\r\n        <button type=\"submit\" className={styles.SearchForm__button}>\r\n          <span className={styles.SearchForm__button__label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={styles.SearchForm__input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.scss';\r\n\r\nconst ImageGalleryItem = ({ url, tags, largeImageURL }) => (\r\n  <li className={styles.ImageGalleryItem}>\r\n    <img\r\n      src={url}\r\n      alt={tags}\r\n      className={styles.ImageGalleryItem__image}\r\n      data-large-image={largeImageURL}\r\n    />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem.jsx';\r\nimport styles from './ImageGallery.module.scss';\r\n\r\nconst ImageGallery = ({ images, onClick }) => (\r\n  <ul className={styles.ImageGallery} onClick={onClick}>\r\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        url={webformatURL}\r\n        tags={tags}\r\n        largeImageURL={largeImageURL}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.scss';\r\n\r\nconst Button = ({ shouldRenderBtn, onButtonClick }) => {\r\n  return (\r\n    shouldRenderBtn && (\r\n      <button className={styles.Button} type=\"button\" onClick={onButtonClick}>\r\n        Load more\r\n      </button>\r\n    )\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  shouldRenderBtn: PropTypes.bool.isRequired,\r\n  onButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\nimport './Loader.scss'\r\n\r\nexport default function Loader () {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <LoaderSpinner\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={5000}\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notice.module.scss';\r\n\r\nconst Notice = ({ notice }) =>\r\n  notice && <p className={styles.Notice}>{notice}</p>;\r\n\r\nNotice.propTypes = {\r\n  notice: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notice;","import PropTypes from 'prop-types';\r\nimport styles from './ErrorNotice.module.scss';\r\n\r\nconst ErrorNotice = ({ error }) =>\r\n  error && <p className={styles.ErrorNotice}>{error.message}</p>;\r\n\r\nErrorNotice.propTypes = {\r\n  error: PropTypes.object,\r\n};\r\n\r\nexport default ErrorNotice;","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ largeImageUrl, largeImageAlt, onClose }) => {\r\n  useEffect(() => {\r\n    const onEscHandler = event => {\r\n      if (event.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onEscHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', onEscHandler);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.Overlay} onClick={handleOverlayClick}>\r\n      <div className={styles.Modal}>\r\n        <img\r\n          className={styles.ModalImg}\r\n          src={largeImageUrl}\r\n          alt={largeImageAlt}\r\n        />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  largeImageUrl: PropTypes.string,\r\n  largeImageAlt: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\n\nconst API_KEY = \"22552656-a52d92f58f7bf96e8efb5df9f\";\naxios.defaults.baseURL = \"https://pixabay.com/api\";\n\nconst fetchGetImages = ({ searchQuery = \"\", currentPage = 1, pageSize = 12 }) =>\n  axios\n    .get(\n      `/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\n    )\n    .then((responce) => responce.data);\n\nexport default fetchGetImages;\n","import { useState, useEffect } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Loader from \"./components/Loader/Loader\";\nimport Notice from \"./components/Notice/Notice\";\nimport ErrorNotice from \"./components/ErrorNotice/ErrorNotice\";\nimport Modal from \"./components/Modal/Modal\";\nimport \"./App.scss\";\n\nimport imagesApi from \"./services/imagesApi\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [notice, setNotice] = useState(\"\");\n  const [renderBtn, setRenderBtn] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageUrl, setLargeImageUrl] = useState(\"\");\n  const [largeImageAlt, setLargeImageAlt] = useState(\"\");\n\n  const pageSize = 12;\n\n  useEffect(() => {\n    const fetchImages = () => {\n      const options = { searchQuery, currentPage, pageSize };\n\n      setLoading(true);\n\n      imagesApi\n        .fetchGetImages(options)\n        .then(({ hits, totalHits }) => {\n          if (totalHits === 0) {\n            setNotice(`Images with '${searchQuery}' not found!`);\n            return;\n          }\n\n          if (totalHits <= pageSize || hits.length < pageSize) {\n            setRenderBtn(false);\n          }\n\n          setImages((prev) => [...prev, ...hits]);\n\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        })\n        .catch((error) => setError(error))\n        .finally(() => setLoading(false));\n    };\n\n    searchQuery ? fetchImages() : setImages([]);\n  }, [currentPage, searchQuery]);\n\n  const handleButtonLoadMoreClick = () => {\n    setCurrentPage((prev) => prev + 1);\n  };\n\n  const handleChangeValue = (query) => {\n    if (searchQuery !== query) {\n      setNotice(\"\");\n      setRenderBtn(true);\n      setError(null);\n      setSearchQuery(query);\n      setCurrentPage(1);\n      setImages([]);\n    }\n  };\n\n  const handleModal = (event) => {\n    if (event.target.nodeName !== \"IMG\") {\n      return;\n    }\n\n    setLargeImageUrl(event.target.dataset.largeImage);\n    setLargeImageAlt(event.target.alt);\n\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setLargeImageUrl(\"\");\n    setLargeImageAlt(\"\");\n  };\n\n  const shouldRenderBtn = images.length > 0 && renderBtn && !loading;\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleChangeValue} />\n      <ErrorNotice error={error} />\n      <Notice notice={notice} />\n      <ImageGallery images={images} onClick={handleModal} />\n\n      {showModal && (\n        <Modal\n          largeImageUrl={largeImageUrl}\n          largeImageAlt={largeImageAlt}\n          onClose={closeModal}\n        />\n      )}\n\n      <Loader loading={loading} />\n      <Button\n        onButtonClick={handleButtonLoadMoreClick}\n        shouldRenderBtn={shouldRenderBtn}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3hvZg\",\"Modal\":\"Modal_Modal__1zj_K\"};"],"sourceRoot":""}